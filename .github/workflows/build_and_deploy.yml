name: Build and Push Artifacts
env:
  PROJECT_ID: ${{ vars.GCP_PROJECT }}
  GKE_CLUSTER: ${{ vars.GKE_CLUSTER }} # Add your cluster name here.
  GKE_ZONE: ${{ vars.GKE_ZONE }} # Add your cluster zone here.
  HELM_GCS_REPOSITORY: gs://levoai-private-helm-charts
  BASE_VERSION: 0.1.
  GHCR_IMAGE_ID: ghcr.io/levoai/poozle/poozle-engine-server

on:
  push:
    branches:
      - main

jobs:
  build-and-push-dev-image:
    runs-on: ubuntu-20.04
    permissions:
      packages: write
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - id: get_version
        run: echo "VERSION=${BASE_VERSION}${{ github.run_number }}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./engine-server
          push: true
          tags: ${{ env.GHCR_IMAGE_ID }}:${{ steps.get_version.outputs.version }}
          cache-from: type=gha,scope=dev
          cache-to: type=gha,mode=max,scope=dev

      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
        if: failure() || cancelled()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  deploy_to_dev:
    runs-on: ubuntu-20.04
    permissions:
      packages: write
    needs: build-and-push-dev-image
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure login
        id: login
        uses: azure/login@v1.4.3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
          resource-group: '${{ secrets.resource_group }}'
          cluster-name: '${{ secrets.cluster_name }}'

      - uses: azure/setup-helm@v3

      - name: Build and upgrade chart
        run: |
          HELM_DIR=./helm
          CHART_NAME=$(awk '/^name:/ {print $2}' "$HELM_DIR"/Chart.yaml)
          CHART_VERSION=${{ needs.build-and-push-dev-image.outputs.version }}
          echo IMAGE_ID="${IMAGE_ID}"
          echo CHART_VERSION="$CHART_VERSION"
          echo CHART_NAME="$CHART_NAME"

          helm lint --strict "$HELM_DIR"
          helm template "$HELM_DIR"

          helm package --version "${CHART_VERSION}" --app-version "${CHART_VERSION}" "$HELM_DIR"
          helm upgrade --install --create-namespace -n levoai --set server.image.tagOverride="${CHART_VERSION}" "${CHART_NAME}" "${CHART_NAME}"-"${CHART_VERSION}".tgz

      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
        if: failure()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  build-and-publish-helm-chart:
    runs-on: ubuntu-20.04
    needs: [build-and-push-dev-image]
    timeout-minutes: 10
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GCS_SA_KEY }}
          export_default_credentials: true

      - uses: azure/setup-helm@v3

      - name: Build and publish helm chart
        run: .github/scripts/build_and_publish_helm_chart_to_gcs.sh ./helm/ ${{ needs.build-and-push-dev-image.outputs.version }} ${{ env.HELM_GCS_REPOSITORY }}