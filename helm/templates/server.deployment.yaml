apiVersion: apps/v1
kind: Deployment
metadata:
  name: poozle-server-service
  labels:
    {{- toYaml .Values.server.deploymentLabels | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- toYaml .Values.server.deploymentLabels | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- toYaml .Values.server.deploymentLabels | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- $secretMounts := list }}
      {{- if .Values.secretMounts }}
      {{- $secretMounts = concat $secretMounts .Values.secretMounts }}
      {{- end }}
      {{- if hasKey .Values "global" }}
      {{- if hasKey .Values.global "levo" }}
      {{- if hasKey .Values.global.levo "secretMounts" }}
      {{- $secretMounts = concat $secretMounts .Values.global.levo.secretMounts }}
      {{- end }}
      {{- end }}
      {{- end }}
      {{- if $secretMounts }}
      volumes:
      {{- range $secretMounts }}
      - name: {{ .name }}
        secret:
          secretName: {{ .secretName }}
          {{- if .items }}
          items:
          {{- range .items }}
            - key: {{ .key }}
              path: {{ .path }}
          {{- end }}
          {{- end }}
          {{- if .defaultMode }}
          defaultMode: {{ .defaultMode }}
          {{- end }}
      {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ include "poozle.server.image" . }}"
          imagePullPolicy: {{ .Values.server.image.pullPolicy }}
          env:
            - name: ENGINE_VERSION
              value: "{{ .Values.engineVersion }}"
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: poozle-secrets
                  key: db_url
            - name: SYNC_DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: poozle-secrets
                  key: sync_db_url
            - name: FRONTEND_HOST
              value: "{{ .Values.frontendHost }}"
            - name: PUBLIC_FRONTEND_HOST
              value: "{{ .Values.publicFrontendHost }}"
            - name: BACKEND_HOST
              value: "{{ .Values.backendHost }}"
            - name: JWT_ACCESS_SECRET
              valueFrom:
                secretKeyRef:
                  name: poozle-secrets
                  key: jwt_access_secret
            - name: JWT_REFRESH_SECRET
              valueFrom:
                secretKeyRef:
                  name: poozle-secrets
                  key: jwt_refresh_secret
            - name: PORT
              value: "{{ .Values.port }}"
            - name: MASTER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: poozle-secrets
                  key: master_token
          {{- $envVars := dict }}
          {{- if hasKey .Values "global" }}
          {{- if hasKey .Values.global "levo" }}
          {{- if hasKey .Values.global.levo "env" }}
          {{- $envVars = merge $envVars .Values.global.levo.env }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- if .Values.extraEnv }}
          {{- $envVars = merge $envVars .Values.extraEnv }}
          {{- end }}
          {{- if $envVars }}
            {{- range $key, $value := $envVars }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          {{- end }}
          {{- if or .Values.extraEnvVarsCM .Values.extraEnvVarsSecret }}
          envFrom:
            {{- if .Values.extraEnvVarsCM }}
            - configMapRef:
                name: {{ tpl .Values.extraEnvVarsCM . | quote }}
            {{- end }}
            {{- if .Values.extraEnvVarsSecret }}
            - secretRef:
                name: {{ tpl .Values.extraEnvVarsSecret . | quote }}
            {{- end }}
          {{- end }}
          {{- $secretMounts := list }}
          {{- if .Values.secretMounts }}
          {{- $secretMounts = concat $secretMounts .Values.secretMounts }}
          {{- end }}
          {{- if hasKey .Values "global" }}
          {{- if hasKey .Values.global "levo" }}
          {{- if hasKey .Values.global.levo "secretMounts" }}
          {{- $secretMounts = concat $secretMounts .Values.global.levo.secretMounts }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- if $secretMounts }}
          volumeMounts:
            {{- range $secretMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              readOnly: true
            {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
