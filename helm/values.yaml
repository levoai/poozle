# Example global configuration
#global:
#  levo:
#    secretMounts:
#      - name: global-tls-cert
#        secretName: global-tls
#        mountPath: /app/global-certs
#        items:
#          - key: tls.crt
#            path: tls.crt
#          - key: tls.key
#            path: tls.key
#    env:
#      SPRING_APPLICATION_JSON: |-
#        {
#          "javax": {
#            "net": {
#              "ssl": {
#                "trustStore": "/var/certs/truststore.jks",
#                "trustStorePassword": "changeit"
#              }
#            }
#          }
#        }

global:
  levo:
    secretMounts: []
    configMapMounts: []
    env: {}

replicaCount: 1
maxUnavailable: 0

engineVersion: 0.1.8-alpha

port: 3000

frontendHost: "http://localhost:3000"
publicFrontendHost: "http://localhost:3000"
backendHost: "http://localhost:3000"

server:
  image:
    registry: ghcr.io
    repo: levoai/poozle
    name: poozle-engine-server
    pullPolicy: IfNotPresent
    tagOverride: ""
  service:
    type: NodePort
    port: 80
  deploymentLabels:
    app: poozle-server
  podLabels:
    app: poozle-server
  podAnnotations: {}
  resources:
    limits:
      cpu: 2
      memory: 768Mi
    requests:
      cpu: 100m
      memory: 256Mi

containerPort: 80

service:
  type: NodePort
  port: 80

imagePullSecrets:
  - name: ghcr-auth

nodeLabels: {}

livenessProbe:
  initialDelaySeconds: 10
  periodSeconds: 5

deploymentLabels:
  app: levo-ui

podLabels:
  app: levo-ui

podAnnotations: {}

deploymentSelectorMatchLabels:
  app: levo-ui

serviceSelectorLabels:
  app: levo-ui

gateway:
  enabled: true

backendURL: https://api.dev.levo.ai

extraEnv: {}

extraEnvVars: []

extraEnvVarsCM: []

extraEnvVarsSecret: []

# Example secretMounts configuration
#secretMounts:
#  - name: config-secret
#    secretName: my-app-config
#    mountPath: /app/config
#    defaultMode: 256  # Optional: 0400 in decimal
#    items:  # Optional: if you want to mount specific keys
#      - key: config.json
#        path: config.json
#      - key: credentials
#        path: credentials.txt
#
#  - name: tls-cert
#    secretName: my-app-tls
#    mountPath: /app/certs
#    items:
#      - key: tls.crt
#        path: tls.crt
#      - key: tls.key
#        path: tls.key

secretMounts: []

# Example configMapMounts configuration
#configMapMounts:
#  - name: config-map
#    configMapName: my-app-config
#    mountPath: /app/config
#    subPath: config.json
#    defaultMode: 256  # Optional: 0400 in decimal
#    items:  # Optional: if you want to mount specific keys
#      - key: config.json
#        path: config.json

configMapMounts: []
